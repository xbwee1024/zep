[1mdiff --git a/include/zep/keymap.h b/include/zep/keymap.h[m
[1mindex 92dd3548..07ea5aac 100644[m
[1m--- a/include/zep/keymap.h[m
[1m+++ b/include/zep/keymap.h[m
[36m@@ -22,6 +22,17 @@[m [mDECLARE_COMMANDID(ExMode)[m
 [m
 DECLARE_COMMANDID(VisualSelectInnerWORD)[m
 DECLARE_COMMANDID(VisualSelectInnerWord)[m
[32m+[m[32mDECLARE_COMMANDID(VisualSelectAWord)[m
[32m+[m[32mDECLARE_COMMANDID(VisualSelectAWORD)[m
[32m+[m[32mDECLARE_COMMANDID(VisualDelete)[m
[32m+[m[32mDECLARE_COMMANDID(VisualChange)[m
[32m+[m[32mDECLARE_COMMANDID(VisualAppendToLine)[m
[32m+[m[32mDECLARE_COMMANDID(VisualAppend)[m
[32m+[m[32mDECLARE_COMMANDID(VisualInsertAtFirstChar)[m
[32m+[m[32mDECLARE_COMMANDID(FindNext)[m
[32m+[m[32mDECLARE_COMMANDID(NextMarker)[m
[32m+[m[32mDECLARE_COMMANDID(PreviousMarker)[m
[32m+[m[32mDECLARE_COMMANDID(MotionNextFirstChar)[m
 [m
 DECLARE_COMMANDID(JoinLines)[m
 DECLARE_COMMANDID(OpenLineBelow)[m
[36m@@ -39,7 +50,7 @@[m [mDECLARE_COMMANDID(DeleteAWord)[m
 DECLARE_COMMANDID(DeleteAWORD)[m
 DECLARE_COMMANDID(DeleteInnerWord)[m
 DECLARE_COMMANDID(DeleteInnerWORD)[m
[31m-DECLARE_COMMANDID(SubstituteToLineEnd)[m
[32m+[m[32mDECLARE_COMMANDID(SubstituteLine)[m
 DECLARE_COMMANDID(Substitute)[m
 [m
 DECLARE_COMMANDID(ChangeToLineEnd)[m
[36m@@ -54,6 +65,10 @@[m [mDECLARE_COMMANDID(ChangeInnerWORD)[m
 DECLARE_COMMANDID(PasteAfter)[m
 DECLARE_COMMANDID(PasteBefore)[m
 [m
[32m+[m[32mDECLARE_COMMANDID(Append)[m
[32m+[m[32mDECLARE_COMMANDID(AppendToLine)[m
[32m+[m[32mDECLARE_COMMANDID(InsertAtFirstChar)[m
[32m+[m
 DECLARE_COMMANDID(VisualLineMode)[m
 [m
 DECLARE_COMMANDID(ExBackspace)[m
[1mdiff --git a/src/mode.cpp b/src/mode.cpp[m
[1mindex 51114c32..3e5573b3 100644[m
[1m--- a/src/mode.cpp[m
[1m+++ b/src/mode.cpp[m
[36m@@ -313,8 +313,7 @@[m [mvoid ZepMode::SwitchMode(EditorMode currentMode)[m
 [m
     switch (currentMode)[m
     {[m
[31m-    case EditorMode::Normal:[m
[31m-    {[m
[32m+[m[32m    case EditorMode::Normal: {[m
         pWindow->SetCursorType(CursorType::Normal);[m
         buffer.ClearSelection();[m
         ClampCursorForMode();[m
[36m@@ -327,15 +326,13 @@[m [mvoid ZepMode::SwitchMode(EditorMode currentMode)[m
         ResetCommand();[m
         m_pendingEscape = false;[m
         break;[m
[31m-    case EditorMode::Visual:[m
[31m-    {[m
[32m+[m[32m    case EditorMode::Visual: {[m
         pWindow->SetCursorType(m_visualCursorType);[m
         ResetCommand();[m
         m_pendingEscape = false;[m
     }[m
     break;[m
[31m-    case EditorMode::Ex:[m
[31m-    {[m
[32m+[m[32m    case EditorMode::Ex: {[m
         m_exCommandStartLocation = cursor;[m
         pWindow->SetCursorType(CursorType::Hidden);[m
         m_pendingEscape = false;[m
[36m@@ -694,9 +691,7 @@[m [mbool ZepMode::GetCommand(CommandContext& context)[m
     }[m
 [m
     // Didn't find an immediate match, found a count and there is no other part to the command[m
[31m-    if (context.currentMode == EditorMode::Normal &&[m
[31m-        mappedCommand == 0 &&[m
[31m-        context.foundCount && context.command.empty())[m
[32m+[m[32m    if (context.currentMode == EditorMode::Normal && mappedCommand == 0 && context.foundCount && context.command.empty())[m
     {[m
         needMoreChars = true;[m
     }[m
[36m@@ -1333,380 +1328,288 @@[m [mbool ZepMode::GetCommand(CommandContext& context)[m
             return true;[m
         }[m
     }[m
[31m-    // CM: TODO[m
[31m-    // These are being moved to mapped commands![m
[31m-    else if (m_currentMode == EditorMode::Normal || m_currentMode == EditorMode::Visual)[m
[32m+[m[32m    else if (mappedCommand == id_VisualSelectAWord)[m
     {[m
[31m-        if (context.command[0] == 'd' || context.command == "D")[m
[32m+[m[32m        if (GetOperationRange("aw", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (context.command == "d")[m
[31m-            {[m
[31m-                // Only in visual mode; delete selected block[m
[31m-                if (GetOperationRange("visual", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                    context.commandResult.modeSwitch = EditorMode::Normal;[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "dd")[m
[31m-            {[m
[31m-                if (GetOperationRange("line", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::DeleteLines;[m
[31m-                    context.commandResult.modeSwitch = EditorMode::Normal;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "d$" || context.command == "D")[m
[31m-            {[m
[31m-                if (GetOperationRange("$", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "dw")[m
[31m-            {[m
[31m-                if (GetOperationRange("w", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "dW")[m
[31m-            {[m
[31m-                if (GetOperationRange("W", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "da")[m
[31m-            {[m
[31m-                context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-            }[m
[31m-            else if (context.command == "daw")[m
[31m-            {[m
[31m-                if (GetOperationRange("aw", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "daW")[m
[31m-            {[m
[31m-                if (GetOperationRange("aW", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "di")[m
[31m-            {[m
[31m-                context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-            }[m
[31m-            else if (context.command == "diw")[m
[31m-            {[m
[31m-                if (GetOperationRange("iw", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "diW")[m
[31m-            {[m
[31m-                if (GetOperationRange("iW", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command.find("dt") == 0)[m
[31m-            {[m
[31m-                if (context.command.length() == 3)[m
[31m-                {[m
[31m-                    context.beginRange = bufferCursor;[m
[31m-                    context.endRange = buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[2], SearchDirection::Forward);[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-                }[m
[31m-            }[m
[32m+[m[32m            m_visualBegin = context.beginRange;[m
[32m+[m[32m            GetCurrentWindow()->SetBufferCursor(context.endRange - 1);[m
[32m+[m[32m            UpdateVisualSelection();[m
[32m+[m[32m            return true;[m
         }[m
[31m-        else if (context.command[0] == 'r')[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_VisualSelectAWORD)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("aW", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (context.command.size() == 1)[m
[31m-            {[m
[31m-                context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                context.commandResult.flags |= CommandResultFlags::HandledCount;[m
[31m-[m
[31m-                if (!buffer.InsideBuffer(bufferCursor + context.count))[m
[31m-                {[m
[31m-                    // Outside the valid buffer; an invalid replace with count![m
[31m-                    return true;[m
[31m-                }[m
[31m-[m
[31m-                context.replaceRangeMode = ReplaceRangeMode::Fill;[m
[31m-                context.op = CommandOperation::Replace;[m
[31m-                context.tempReg.text = context.command[1];[m
[31m-                context.pRegister = &context.tempReg;[m
[31m-[m
[31m-                // Get the range from visual, or use the cursor location[m
[31m-                if (!GetOperationRange("visual", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.beginRange = bufferCursor;[m
[31m-                    context.endRange = buffer.LocationFromOffsetByChars(bufferCursor, context.count);[m
[31m-                }[m
[31m-                context.commandResult.modeSwitch = EditorMode::Normal;[m
[31m-            }[m
[32m+[m[32m            m_visualBegin = context.beginRange;[m
[32m+[m[32m            GetCurrentWindow()->SetBufferCursor(context.endRange - 1);[m
[32m+[m[32m            UpdateVisualSelection();[m
[32m+[m[32m            return true;[m
         }[m
[31m-        // Substitute[m
[31m-        else if ((context.command[0] == 's') || (context.command[0] == 'S'))[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteToLineEnd)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("$", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (context.command == "S")[m
[31m-            {[m
[31m-                // Delete whole line and go to insert mode[m
[31m-                context.beginRange = context.buffer.GetLinePos(context.bufferCursor, LineLocation::LineBegin);[m
[31m-                context.endRange = context.buffer.GetLinePos(context.bufferCursor, LineLocation::LineCRBegin);[m
[31m-                context.op = CommandOperation::Delete;[m
[31m-            }[m
[31m-            else if (context.command == "s")[m
[31m-            {[m
[31m-                // Only in visual mode; delete selected block and go to insert mode[m
[31m-                if (GetOperationRange("visual", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-                // Just delete under m_bufferCursor and insert[m
[31m-                else if (GetOperationRange("cursor", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                return false;[m
[31m-            }[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_VisualDelete)[m
[32m+[m[32m    {[m
[32m+[m[32m        // Only in visual mode; delete selected block[m
[32m+[m[32m        if (GetOperationRange("visual", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Normal;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteLine)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("line", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::DeleteLines;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Normal;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteWord)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("w", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteWORD)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("W", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteAWord)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("aw", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteAWORD)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("aW", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteInnerWord)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("iw", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_DeleteInnerWORD)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("iW", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeToLineEnd)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("$", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m        {[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
             context.commandResult.modeSwitch = EditorMode::Insert;[m
         }[m
[31m-        else if (context.command[0] == 'C' || context.command[0] == 'c')[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_VisualChange)[m
[32m+[m[32m    {[m
[32m+[m[32m        // Only in visual mode; delete selected block[m
[32m+[m[32m        if (GetOperationRange("visual", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (context.command == "c")[m
[31m-            {[m
[31m-                // Only in visual mode; delete selected block[m
[31m-                if (GetOperationRange("visual", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "cc")[m
[31m-            {[m
[31m-                if (GetOperationRange("line", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::DeleteLines;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "c$" || context.command == "C")[m
[31m-            {[m
[31m-                if (GetOperationRange("$", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "cw")[m
[31m-            {[m
[31m-                if (GetOperationRange("cw", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "cW")[m
[31m-            {[m
[31m-                if (GetOperationRange("cW", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "ca")[m
[31m-            {[m
[31m-                context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-            }[m
[31m-            else if (context.command == "caw")[m
[31m-            {[m
[31m-                if (GetOperationRange("aw", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "caW")[m
[31m-            {[m
[31m-                if (GetOperationRange("aW", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "ci")[m
[31m-            {[m
[31m-                context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-            }[m
[31m-            else if (context.command == "ciw")[m
[31m-            {[m
[31m-                if (GetOperationRange("iw", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command == "ciW")[m
[31m-            {[m
[31m-                if (GetOperationRange("iW", context.currentMode, context.beginRange, context.endRange))[m
[31m-                {[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-            }[m
[31m-            else if (context.command.find("ct") == 0)[m
[31m-            {[m
[31m-                if (context.command.length() == 3)[m
[31m-                {[m
[31m-                    context.beginRange = bufferCursor;[m
[31m-                    context.endRange = buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[2], SearchDirection::Forward);[m
[31m-                    context.op = CommandOperation::Delete;[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            if (context.op != CommandOperation::None)[m
[31m-            {[m
[31m-                context.commandResult.modeSwitch = EditorMode::Insert;[m
[31m-            }[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Insert;[m
         }[m
[31m-        else if (context.command[0] == 'a')[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeLine)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("line", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (m_currentMode == EditorMode::Visual)[m
[31m-            {[m
[31m-                if (context.command.size() < 2)[m
[31m-                {[m
[31m-                    context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    if (context.command[1] == 'W')[m
[31m-                    {[m
[31m-                        if (GetOperationRange("aW", context.currentMode, context.beginRange, context.endRange))[m
[31m-                        {[m
[31m-                            m_visualBegin = context.beginRange;[m
[31m-                            GetCurrentWindow()->SetBufferCursor(context.endRange - 1);[m
[31m-                            UpdateVisualSelection();[m
[31m-                            return true;[m
[31m-                        }[m
[31m-                        return true;[m
[31m-                    }[m
[31m-                    else if (context.command[1] == 'w')[m
[31m-                    {[m
[31m-                        if (GetOperationRange("aw", context.currentMode, context.beginRange, context.endRange))[m
[31m-                        {[m
[31m-                            m_visualBegin = context.beginRange;[m
[31m-                            GetCurrentWindow()->SetBufferCursor(context.endRange - 1);[m
[31m-                            UpdateVisualSelection();[m
[31m-                            return true;[m
[31m-                        }[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                // Cursor append[m
[31m-                GetCurrentWindow()->SetBufferCursor(context.bufferCursor + 1);[m
[31m-                context.commandResult.modeSwitch = EditorMode::Insert;[m
[31m-                return true;[m
[31m-            }[m
[32m+[m[32m            context.op = CommandOperation::DeleteLines;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Insert;[m
         }[m
[31m-        else if (context.command == "A")[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeWord)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("cw", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            // Cursor append to end of line[m
[31m-            GetCurrentWindow()->SetBufferCursor(context.buffer.GetLinePos(bufferCursor, LineLocation::LineCRBegin));[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
             context.commandResult.modeSwitch = EditorMode::Insert;[m
[31m-            return true;[m
         }[m
[31m-        else if (context.command == "I")[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeWORD)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("cW", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            // Cursor Insert beginning char of line[m
[31m-            GetCurrentWindow()->SetBufferCursor(context.buffer.GetLinePos(bufferCursor, LineLocation::LineFirstGraphChar));[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
             context.commandResult.modeSwitch = EditorMode::Insert;[m
[31m-            return true;[m
         }[m
[31m-        else if (context.command == ";")[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeAWord)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("aw", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (!m_lastFind.empty())[m
[31m-            {[m
[31m-                GetCurrentWindow()->SetBufferCursor(context.buffer.FindOnLineMotion(bufferCursor, (const utf8*)m_lastFind.c_str(), m_lastFindDirection));[m
[31m-                return true;[m
[31m-            }[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Insert;[m
         }[m
[31m-        else if (context.command[0] == 'f')[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeAWORD)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("aW", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (context.command.length() > 1)[m
[31m-            {[m
[31m-                GetCurrentWindow()->SetBufferCursor(context.buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[1], SearchDirection::Forward));[m
[31m-                m_lastFind = context.command[1];[m
[31m-                m_lastFindDirection = SearchDirection::Forward;[m
[31m-                return true;[m
[31m-            }[m
[31m-            context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Insert;[m
         }[m
[31m-        else if (context.command[0] == 'F')[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeInnerWord)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("iw", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            if (context.command.length() > 1)[m
[31m-            {[m
[31m-                GetCurrentWindow()->SetBufferCursor(context.buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[1], SearchDirection::Backward));[m
[31m-                m_lastFind = context.command[1];[m
[31m-                m_lastFindDirection = SearchDirection::Backward;[m
[31m-                return true;[m
[31m-            }[m
[31m-            context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Insert;[m
         }[m
[31m-        else if (context.command[0] == 'n')[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_ChangeInnerWORD)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (GetOperationRange("iW", context.currentMode, context.beginRange, context.endRange))[m
         {[m
[31m-            auto pMark = buffer.FindNextMarker(context.bufferCursor, m_lastSearchDirection, RangeMarkerType::Search);[m
[31m-            if (pMark)[m
[32m+[m[32m            context.op = CommandOperation::Delete;[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Insert;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_Append)[m
[32m+[m[32m    {[m
[32m+[m[32m        // Cursor append[m
[32m+[m[32m        GetCurrentWindow()->SetBufferCursor(context.bufferCursor + 1);[m
[32m+[m[32m        context.commandResult.modeSwitch = EditorMode::Insert;[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_AppendToLine)[m
[32m+[m[32m    {[m
[32m+[m[32m        GetCurrentWindow()->SetBufferCursor(context.buffer.FindOnLineMotion(bufferCursor, (const utf8*)m_lastFind.c_str(), m_lastFindDirection));[m
[32m+[m[32m        context.commandResult.modeSwitch = EditorMode::Insert;[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_InsertAtFirstChar)[m
[32m+[m[32m    {[m
[32m+[m[32m        GetCurrentWindow()->SetBufferCursor(context.buffer.GetLinePos(bufferCursor, LineLocation::LineFirstGraphChar));[m
[32m+[m[32m        context.commandResult.modeSwitch = EditorMode::Insert;[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (mappedCommand == id_MotionNextFirstChar)[m
[32m+[m[32m    {[m
[32m+[m[32m        GetCurrentWindow()->MoveCursorY(1);[m
[32m+[m[32m        GetCurrentWindow()->SetBufferCursor(context.buffer.GetLinePos(GetCurrentWindow()->GetBufferCursor(), LineLocation::LineBegin));[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    else if (context.command[0] == 'c')[m
[32m+[m[32m    {[m
[32m+[m[32m        if (context.command.find("ct") == 0)[m
[32m+[m[32m        {[m
[32m+[m[32m            if (context.command.length() == 3)[m
             {[m
[31m-                GetCurrentWindow()->SetBufferCursor(pMark->range.first);[m
[32m+[m[32m                context.beginRange = bufferCursor;[m
[32m+[m[32m                context.endRange = buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[2], SearchDirection::Forward);[m
[32m+[m[32m                context.op = CommandOperation::Delete;[m
[32m+[m[32m            }[m
[32m+[m[32m            else[m
[32m+[m[32m            {[m
[32m+[m[32m                context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
             }[m
[31m-            return true;[m
         }[m
[31m-        else if (context.command[0] == 'N')[m
[32m+[m
[32m+[m[32m        if (context.op != CommandOperation::None)[m
         {[m
[31m-            auto pMark = buffer.FindNextMarker(context.bufferCursor, m_lastSearchDirection == SearchDirection::Forward ? SearchDirection::Backward : SearchDirection::Forward, RangeMarkerType::Search);[m
[31m-            if (pMark)[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Insert;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (context.command[0] == 'd' || context.command == "D")[m
[32m+[m[32m    {[m
[32m+[m[32m        if (context.command.find("dt") == 0)[m
[32m+[m[32m        {[m
[32m+[m[32m            if (context.command.length() == 3)[m
             {[m
[31m-                GetCurrentWindow()->SetBufferCursor(pMark->range.first);[m
[32m+[m[32m                context.beginRange = bufferCursor;[m
[32m+[m[32m                context.endRange = buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[2], SearchDirection::Forward);[m
[32m+[m[32m                context.op = CommandOperation::Delete;[m
[32m+[m[32m            }[m
[32m+[m[32m            else[m
[32m+[m[32m            {[m
[32m+[m[32m                context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
             }[m
[31m-            return true;[m
         }[m
[31m-        else if (context.command[0] == ExtKeys::RETURN)[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (context.command[0] == 'r')[m
[32m+[m[32m    {[m
[32m+[m[32m        if (context.command.size() == 1)[m
         {[m
[31m-            if (context.currentMode == EditorMode::Normal)[m
[32m+[m[32m            context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[32m+[m[32m        }[m
[32m+[m[32m        else[m
[32m+[m[32m        {[m
[32m+[m[32m            context.commandResult.flags |= CommandResultFlags::HandledCount;[m
[32m+[m
[32m+[m[32m            if (!buffer.InsideBuffer(bufferCursor + context.count))[m
             {[m
[31m-                // Normal mode - RETURN moves cursor down a line![m
[31m-                GetCurrentWindow()->MoveCursorY(1);[m
[31m-                GetCurrentWindow()->SetBufferCursor(context.buffer.GetLinePos(GetCurrentWindow()->GetBufferCursor(), LineLocation::LineBegin));[m
[32m+[m[32m                // Outside the valid buffer; an invalid replace with count![m
                 return true;[m
             }[m
[31m-            return false;[m
[32m+[m
[32m+[m[32m            context.replaceRangeMode = ReplaceRangeMode::Fill;[m
[32m+[m[32m            context.op = CommandOperation::Replace;[m
[32m+[m[32m            context.tempReg.text = context.command[1];[m
[32m+[m[32m            context.pRegister = &context.tempReg;[m
[32m+[m
[32m+[m[32m            // Get the range from visual, or use the cursor location[m
[32m+[m[32m            if (!GetOperationRange("visual", context.currentMode, context.beginRange, context.endRange))[m
[32m+[m[32m            {[m
[32m+[m[32m                context.beginRange = bufferCursor;[m
[32m+[m[32m                context.endRange = buffer.LocationFromOffsetByChars(bufferCursor, context.count);[m
[32m+[m[32m            }[m
[32m+[m[32m            context.commandResult.modeSwitch = EditorMode::Normal;[m
         }[m
[31m-        else[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (context.command[0] == 'f')[m
[32m+[m[32m    {[m
[32m+[m[32m        if (context.command.length() > 1)[m
         {[m
[31m-            return false;[m
[32m+[m[32m            GetCurrentWindow()->SetBufferCursor(context.buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[1], SearchDirection::Forward));[m
[32m+[m[32m            m_lastFind = context.command[1];[m
[32m+[m[32m            m_lastFindDirection = SearchDirection::Forward;[m
[32m+[m[32m            return true;[m
         }[m
[31m-        // End of mapped command replace block[m
[32m+[m[32m        context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
     }[m
[32m+[m[32m    else if (context.command[0] == 'F')[m
[32m+[m[32m    {[m
[32m+[m[32m        if (context.command.length() > 1)[m
[32m+[m[32m        {[m
[32m+[m[32m            GetCurrentWindow()->SetBufferCursor(context.buffer.FindOnLineMotion(bufferCursor, (const utf8*)&context.command[1], SearchDirection::Backward));[m
[32m+[m[32m            m_lastFind = context.command[1];[m
[32m+[m[32m            m_lastFindDirection = SearchDirection::Backward;[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        context.commandResult.flags |= CommandResultFlags::NeedMoreChars;[m
[32m+[m[32m    }[m
[32m+[m[32m    else[m
[32m+[m[32m    {[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m[32m    // End of mapped command replace block[m
[32m+[m[32m}*/[m
     else if (m_currentMode == EditorMode::Insert)[m
     {[m
         std::string strText = context.fullCommand;[m
[36m@@ -1788,7 +1691,7 @@[m [mbool ZepMode::GetCommand(CommandContext& context)[m
     }[m
 [m
     return false;[m
[31m-}[m
[32m+[m[32m} // namespace Zep[m
 [m
 void ZepMode::ResetCommand()[m
 {[m
[1mdiff --git a/src/mode_vim.cpp b/src/mode_vim.cpp[m
[1mindex d2ef8633..2ad1aeb5 100644[m
[1m--- a/src/mode_vim.cpp[m
[1m+++ b/src/mode_vim.cpp[m
[36m@@ -128,12 +128,19 @@[m [mvoid ZepMode_Vim::Init()[m
     keymap_add({ &m_normalMap, &m_visualMap }, { "gE" }, id_MotionBackEndWORD);[m
     keymap_add({ &m_normalMap, &m_visualMap }, { "gg" }, id_MotionGotoBeginning);[m
 [m
[32m+[m[32m    keymap_add({ &m_visualMap }, { "C" }, id_ChangeLine);[m
[32m+[m
     // Not necessary?[m
     keymap_add({ &m_normalMap, &m_visualMap, &m_insertMap }, { "<Escape>" }, id_NormalMode);[m
 [m
     // Visual mode[m
[32m+[m[32m    keymap_add(m_visualMap, "aW", id_VisualSelectAWORD);[m
[32m+[m[32m    keymap_add(m_visualMap, "aw", id_VisualSelectAWord);[m
     keymap_add(m_visualMap, "iW", id_VisualSelectInnerWORD);[m
     keymap_add(m_visualMap, "iw", id_VisualSelectInnerWord);[m
[32m+[m[32m    keymap_add(m_visualMap, "d", id_VisualDelete);[m[41m [m
[32m+[m[32m    keymap_add(m_visualMap, "c", id_VisualChange);[m
[32m+[m
 [m
     // Normal mode only[m
     keymap_add(m_normalMap, "i", id_InsertMode);[m
[36m@@ -144,6 +151,34 @@[m [mvoid ZepMode_Vim::Init()[m
     keymap_add(m_normalMap, "V", id_VisualLineMode);[m
     keymap_add(m_normalMap, "v", id_VisualMode);[m
 [m
[32m+[m[32m    keymap_add(m_normalMap, "dw", id_DeleteWord);[m
[32m+[m[32m    keymap_add(m_normalMap, "dW", id_DeleteWORD);[m
[32m+[m[32m    keymap_add(m_normalMap, "daw", id_DeleteAWord);[m
[32m+[m[32m    keymap_add(m_normalMap, "daW", id_DeleteAWORD);[m
[32m+[m[32m    keymap_add(m_normalMap, "diw", id_DeleteInnerWord);[m
[32m+[m[32m    keymap_add(m_normalMap, "diW", id_DeleteInnerWORD);[m
[32m+[m[32m    keymap_add({ &m_normalMap }, { "D", "d$" }, id_DeleteToLineEnd);[m
[32m+[m[32m    keymap_add({ &m_normalMap }, { "dd" }, id_DeleteLine);[m
[32m+[m
[32m+[m[32m    keymap_add(m_normalMap, "cw", id_ChangeWord);[m
[32m+[m[32m    keymap_add(m_normalMap, "cW", id_ChangeWORD);[m
[32m+[m[32m    keymap_add(m_normalMap, "ciw", id_ChangeInnerWord);[m
[32m+[m[32m    keymap_add(m_normalMap, "ciW", id_ChangeInnerWORD);[m
[32m+[m[32m    keymap_add(m_normalMap, "caw", id_ChangeAWord);[m
[32m+[m[32m    keymap_add(m_normalMap, "caW", id_ChangeAWORD);[m
[32m+[m[32m    keymap_add({ &m_normalMap }, { "C","c$" }, id_ChangeToLineEnd);[m
[32m+[m[32m    keymap_add({ &m_normalMap }, { "cc" }, id_ChangeLine);[m
[32m+[m
[32m+[m[32m    keymap_add(m_normalMap, "S", id_SubstituteLine);[m
[32m+[m[32m    keymap_add(m_normalMap, "s", id_Substitute);[m
[32m+[m[32m    keymap_add(m_normalMap, "A", id_AppendToLine);[m
[32m+[m[32m    keymap_add(m_normalMap, "a", id_Append);[m
[32m+[m[32m    keymap_add(m_normalMap, "I", id_InsertAtFirstChar);[m
[32m+[m[32m    keymap_add(m_normalMap, ";", id_FindNext);[m
[32m+[m
[32m+[m
[32m+[m[32m    keymap_add(m_normalMap, "n", id_MotionNextMarker);[m
[32m+[m[32m    keymap_add(m_normalMap, "N", id_MotionPreviousMarker);[m
     keymap_add(m_normalMap, "<F8>", id_MotionNextMarker);[m
     keymap_add(m_normalMap, "<S-F8>", id_MotionPreviousMarker);[m
 [m
[36m@@ -156,7 +191,8 @@[m [mvoid ZepMode_Vim::Init()[m
     keymap_add(m_normalMap, "<C-l>", id_MotionRightSplit);[m
     keymap_add(m_normalMap, "<C-k>", id_MotionUpSplit);[m
     keymap_add(m_normalMap, "<C-h>", id_MotionLeftSplit);[m
[31m-[m
[32m+[m[32m    keymap_add(m_normalMap, "<Return>", id_MotionNextFirstChar);[m
[32m+[m[41m    [m
     keymap_add({ &m_normalMap }, { "<C-p>", "<C-,>" }, id_QuickSearch);[m
     keymap_add({ &m_normalMap }, { "<C-r>" }, id_Redo);[m
     keymap_add({ &m_normalMap }, { "<C-z>", "u" }, id_Undo);[m
